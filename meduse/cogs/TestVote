from discord.ext import commands
from discord import app_commands
import discord

class TestVote(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.polls = {}

    class ModalClass(discord.ui.Modal, title="投票選項"):
        def __init__(self, title, count):
            super().__init__(title=title)
            for i in range(count):
                self.add_item(discord.ui.TextInput(label=f"選項{i+1}"))

        async def on_submit(self, interaction: discord.Interaction):
            options = [self.children[i].value for i in range(len(self.children))]
            self.bot.polls[interaction.user.id] = {'title': self.title, 'options': options, 'votes': [0]*len(options)}

            embed = discord.Embed(title=self.title, description="請踴躍投票", color=0xe570e7)
            for i, option in enumerate(options):
                embed.add_field(name=f"選項{i+1}:", value=f"{option}_目前票數:0", inline=False)

            view = discord.ui.View()
            for i in range(len(options)):
                button = discord.ui.Button(label=f"選項{i+1}", style=discord.ButtonStyle.primary, custom_id=f"vote_{i}")
                view.add_item(button)

            await interaction.response.send_message(embed=embed, view=view)

    @commands.Cog.listener()
    async def on_interaction(self, interaction: discord.Interaction):
        if interaction.type == discord.InteractionType.component:
            custom_id = interaction.custom_id
            if custom_id.startswith('vote_'):
                index = int(custom_id.split('_')[1])
                user_id = interaction.user.id
                if user_id in self.bot.polls:
                    poll = self.bot.polls[user_id]
                    poll['votes'][index] += 1
                    embed = discord.Embed(title=poll['title'], description="請踴躍投票", color=0xe570e7)
                    for i, (option, votes) in enumerate(zip(poll['options'], poll['votes'])):
                        embed.add_field(name=f"選項{i+1}:", value=f"{option}_目前票數:{votes}", inline=False)
                    await interaction.response.edit_message(embed=embed)

    @app_commands.command(name="vote", description="創建一個投票")
    @app_commands.describe(title="投票標題", count="選項數量(最多5)")
    async def vote(self, ctx: discord.ApplicationContext, title: str, count: int):
        if count > 5:
            await ctx.respond("選項數量不能超過5。")
            return
        elif count < 2:
            await ctx.respond("至少需要2個選項來進行投票。")
            return
        modal = self.ModalClass(title, count)
        await ctx.send_modal(modal)

#async def setup(bot):
#    await bot.add_cog(TestVote(bot))